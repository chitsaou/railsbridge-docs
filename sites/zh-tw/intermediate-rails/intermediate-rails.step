message <<-MARKDOWN
# 讓我們來製作一個 message board 吧！

## 此課程假設
* 你已經通過基礎 RailsBridge 裝機趴（Installfest）且成功完成 <a href="/installfest/get_a_sticker">Get a Sticker</a> 步驟。 
* 之前你已經通過 RailsBridge <a href="/intro-to-rails">Suggestotron curriculum</a> 至少一次或是好幾次, 亦或是或許你因為某些原因對於 Rails 感到非常地舒適自在。 
* 你想要學習更多的 Rails！

## 目標
* 創造一個東西！
* 瞭解在一個 RailsApp 中, Model, View, Controller 做了什麼事情, 以及它們如何一起運作
* 可以更自在地面對錯誤訊息，將之視為指引，而非恐怖的東西

## 接下來將會發生什麼事情？ 
* 我們將會製作一個 Message Board System, 會有一個前頁顯示文章, 透過點擊可以觀看原文及底下的討論串。

* 我們已經將它分割成底下幾個 challenges ：
  * Challenge 1: 產生一個新 Rails App , 配上一頁靜態 Home Page
  * Challenge 2: 安裝 devise
  * Challenge 3: 透過 bootstrap 讓它變得更漂亮 
  * Challenge 4: 新增讓你產生新文章以及觀看個別文章的頁面
  * Challenge 5: 製作一個 posts index 頁面
  * Challenge 6: 新增回覆功能
  * Challenge 7: 直接回覆於一篇文章的某一行
  * Challenge ∞: 其他任何你想要的 features

* 每次新增功能到你的 app 後，在新增更多 features 之前，請 COMMIT TO GIT！  添加新 features 可能會使整個 app 炸掉, 這時你會冀望能夠回復至之前的版本的。

極其重要的注意事項: 我們稱這些區塊為 challenges 正是因為它們極具挑戰性！ 透過協作, 此課程將會非常有趣 - 與你的老師、助教、同學討論吧！ 此課程的風格會非常不同於 Suggestotron，因此當你不知道下一步該怎麼做時請不要感到氣餒。

## 如何使用此課程
* Challenges 為一連串在給定時間內需要完成的事項。 當你（或你的團隊）完成一組需求時，就往下完成下一組需求。
* Requirements in this curriculum are not entirely divorced from what a requirement is in the agile software development methodology — things that should be in the application as defined by whoever is designing/deciding things about the product. Except here, we’ve also thrown in some non-application requirements, like the ability to explain a concept to a peer.
* Discussions are led by the teacher; this is the closest this curriculum gets to lecture-y teaching.
* 把提示當成工具 & 參考.

* 這裡有給予教師的教學指引： http://bit.ly/int-railsbridge-guide
MARKDOWN

next_step "create_a_new_rails_app_with_a_static_home_page"

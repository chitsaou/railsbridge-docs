requirements do
message <<-MARKDOWN
* 使用者應該要可以新增一篇含有標題、作者、發佈日期與內容的文章。而當前登入的使用者就是該篇文章作者。
* 必須要有一個頁面顯示文章的完整內容（也就是文章內容頁）。
* 如果使用者沒有寫完所有欄位就送出，那使用者就會看到一些錯誤訊息，但是不會讓他們輸入過的內容消失。
MARKDOWN
  table do
    tr do
      td do
        h2 'Create View', class: 'centered'
      end
      td do
        h2 'Show View', class: 'centered'
      end
    end
    tr do
      td do
        img class: 'noborder', src: 'img/create_post.png'
      end
      td do
        img class: 'noborder', src: 'img/show_post.png'
      end
    end
  end
end

discussion do
message <<-MARKDOWN
* 你如何建立一個資源？你需要傳入哪些參數？
* 那麼： Rails 的資源產生器替你做了哪些事情？找出所有新增的檔案。或許也可以把這些東西寫在白板上討論。
* 如何讓使用者與一篇文章建立起關聯？
  * 當你建立 Post Model 的時候你必須加入什麼東西到 migration 檔案？
  * 這層關聯是如何在 User 與 Post model 之間溝通的？
  * 當你建立一篇文章的時候你會如何將文章與當前登入的使用者建立關聯？
* 在 posts controller 中 `new` 與 `create` 兩個方法之間的差異是什麼？以及它們是如何與建立一篇新文章的表單有關聯的？
MARKDOWN
end

tools_and_references do
message <<-MARKDOWN
* RailsGuides - Active Record Associations （關聯）: <http://guides.rubyonrails.org/association_basics.html#the-belongs_to-association>.
* RailsGuides - Form Helpers, section 2.2: <http://guides.rubyonrails.org/form_helpers.html#binding-a-form-to-an-object>
* RailsGuides - Routes - CRUD, Verbs, and Actions: <http://guides.rubyonrails.org/routing.html#crud-verbs-and-actions>.
* RailsGuides - Active Record Validations and Callbacks （驗證與回呼）: <http://guides.rubyonrails.org/active_record_validations_callbacks.html>
MARKDOWN
end

hints do
message <<-MARKDOWN
* Rails 有一些內建的的方法在兩個 model 間建立關聯。看一下上面 Rails Guides 連結中的提示來協助你去建立當前登入者與文章作者之間的關聯！
* 別直接用 HTML 撰寫表單！你沒必要這樣做！ Rails 當然也會幫你處理掉這一塊。 看一下上面 Rails Guide 的連結！
* Rails 有一個內建方法在有什麼東西儲存在資料庫時會去記錄。也許在顯示文章的建立日期、時間時會方便一點。
* 現在，我們要在顯示文章作者時顯示使用者的 E-mail。你可以再等一下的時候新增名字或其他識別的方式！（還有，你如果要從 User model 中取得使用者的 E-mail 時，你也必須要有一個給 Post 資源用的 user 參數。）
* 你需要一個 `create` 方法去儲存你傳送過來的資料。在 Getting Started 文件中的這一個章節裡往下捲一點點有非常有幫助的資訊，而且可以看看 create 方法的範例。 <http://guides.rubyonrails.org/getting_started.html#creating-new-posts>.
MARKDOWN
end

next_step "make_a_posts_index_page"

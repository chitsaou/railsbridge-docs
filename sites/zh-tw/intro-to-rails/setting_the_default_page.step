goals {

  message <<-MARKDOWN
  現在結構已經打好了，來把流程變順暢吧。

  現在你打開 <http://localhost:3000> 的話，你會看到 "Welcome aboard" 的字樣。

  如果 <http://localhost:3000> 可以直接跑到 topics 列表的話會比較方便哦。

  在這一步我們會實現它，並從中學習 Rails 路由（routes）的基本。
  MARKDOWN
}

steps {

  step "加入 root route" do
    message "在編輯器打開 `config/routes.rb`。"

    message "搜尋 **root**，用 Rails 4 的話會在最上方。"

    message "解除下面這一行的註解，方法是把行頭的 `#` 刪除掉。接著改成 `root 'topics#index'`。完成後會長得像這樣："

    source_code :ruby, <<-RUBY
root 'topics#index'
    RUBY

    em do
      message "（Rails 3.x 要改加 `root to: 'topics#index'` 還要刪掉 `public/index.html` 這個檔案。）"
    end
  end

  step "確認修改成功" do
    message "回到 <http://localhost:3000/>。你應該會被帶到 topics 列表。"
  end
}

explanation {

 message <<-MARKDOWN
  * `root 'topics#index'` 這個 route 是用來告訴 rails 你的網站的預設位置是 `topics#index`。
    `topics#index` 指的是列出 topics 的那個頁面（Topics Controller 的 index action）。
  * Rails routes 控制了 URL（網址）如何對應到 server 上的程式碼。就好比地址對應到房子或公寓。
  * `config/routes.rb` 檔像是一個地址簿，列出所有可以使用的地址，以及對應到的程式碼。
  * `routes.rb` 使用了一些簡寫法，所以我們不會在檔案裡看到所有的 URL。可以利用終端機來看看有哪些 URL。

  在終端機輸入 `rake routes`。你會看到像這樣的東西：

  ````
    $ rake routes

        Prefix Verb   URI Pattern                Controller#Action
        topics GET    /topics(.:format)          topics#index
               POST   /topics(.:format)          topics#create
     new_topic GET    /topics/new(.:format)      topics#new
    edit_topic GET    /topics/:id/edit(.:format) topics#edit
         topic GET    /topics/:id(.:format)      topics#show
               PATCH  /topics/:id(.:format)      topics#update
               PUT    /topics/:id(.:format)      topics#update
               DELETE /topics/:id(.:format)      topics#destroy
          root GET    /                          topics#index
  ````
  這樣就可以顯示所有你的應用程式會處理的 URL 了。有些冒號（`:`）開頭的是變數，
  :id 表示資料的 id 編號。括號框起來的是可以省略的。

  在 Rails 4 裡面，你也可以在開發環境從你的網站上直接看到這個資訊。請打開
  <a href="http://localhost:3000/rails/info">http://localhost:3000/rails/info</a>
  你就會看到像這樣的東西：

  <img src='img/rails4_rails_info_routing.png'>

  如果你隨便開一個不存在的網址，也會看到這個畫面。（試試看 <a href="http://localhost:3000/sandwich">http://localhost:3000/sandwich</a>）

### Exploring Routes （可以跳過）

  現在你可以看看你的程式裡面可以用的 path 有哪些。我們來試試看我們剛剛產生的一個 topics 的 route。打開 rails console 來玩玩看：

    $ rails console
    >> app.topics_path
    => "/topics"
    >> app.topics_url
    => "http://www.example.com/topics"

  `app` 這個特別的 object 表示你的整個應用程式。
  你可以問它有什麼 route、玩玩看資料庫連線、或是模擬 `get`、`post` 的 web requests（還有很多）。

  MARKDOWN
}

insert 'consider_deploying'

next_step "voting_on_topics"

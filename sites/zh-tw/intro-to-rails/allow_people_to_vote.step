goals {
  message "現在我們要來加一個按鈕，讓大家可以按下去就投票加分。"
}

steps {

  step "加一個新的 controller action 來投票加分" do
    message "編輯 `app/controllers/topics_controller.rb` 加一個 method，像這樣："

    source_code :ruby, <<-RUBY
      def upvote
        @topic = Topic.find(params[:id])
        @topic.votes.create
        redirect_to(topics_path)
      end
    RUBY

    message <<-MARKDOWN
      * `@topic = Topic.find(params[:id])` 從資料庫裡面用 id 找到 topic 然後存進 `@topic` 變數裡面。
      * `@topic.votes.create` 給目前這篇 topic 新增一筆投票記錄，然後存進資料庫裡面。
      * `redirect_to(topics_path)` 跟瀏覽器說要回到 topics_path（topics 的列表）。
    MARKDOWN
  end

  step "給投票加分操作加一個 route" do
    message "打開 `config/routes.rb` 然後找這個："
    source_code :ruby, <<-RUBY
      resources :topics
    RUBY

    message "取代之，讓它長得像這樣："
    source_code :ruby, <<-RUBY
      resources :topics do
        member do
          post 'upvote'
        end
      end
    RUBY

    message <<-MARKDOWN
      現在來檢查 route 有成功加入，方法是看一下 `rake routes` 的輸出結果，或是打開 [http://localhost:3000/rails/info](http://localhost:3000/rails/info)。你應該會看到有一行長得像這樣：

      ```
            Prefix Verb   URI Pattern                  Controller#Action
      upvote_topic POST   /topics/:id/upvote(.:format) topics#upvote
      ```
    MARKDOWN
  end

  step "在 view 裡面加一個按鈕" do

    message "編輯 `app/views/topics/index.html.erb` 讓最下面的 loop（迴圈）程式碼長得像這樣："

    source_code :erb, <<-HTML
      <% @topics.each do |topic| %>
        <tr>
          <td><%= topic.title %></td>
          <td><%= topic.description %></td>
          <td><%= pluralize(topic.votes.count, "vote") %></td>
          <td><%= button_to '+1', upvote_topic_path(topic), method: :post %></td>
          <td><%= link_to 'Show', topic %></td>
          <td><%= link_to 'Edit', edit_topic_path(topic) %></td>
          <td><%= link_to 'Destroy', topic, method: :delete, data: { confirm: 'Are you sure?' } %></td>
        </tr>
      <% end %>
    HTML

    message <<-MARKDOWN
      * `pluralize(topic.votes.count, "vote")` 會輸出票數，並且根據（英文的）單複數在後面加上 'vote' 或 'votes' 單字。
      * `button_to '+1'` 加一個 HTML 的按鈕（button），裡面有字 '+1'。
      * `topic_upvote_path(topic)` 產生我們要呼叫的 action 的對應 URL。以此例而言，我們要對目前的 topic 投票加分。
        * `topic_upvote_path(topic)` 會回傳 `/topics/42/upvote`（如果 topic.id 是 42）。
      * `method: :post` 確保我們使用了 CRUD 裡面的 create 操作，而非 read。
    MARKDOWN
  end

  step "在瀏覽器裡面檢查修改成功" do
    message "回到 <http://localhost:3000/topics> 然後隨便玩玩看。"
    message "嗯，你發現了嗎，改程式不用重開 server 哦。酷吧？"
  end
}

insert 'consider_deploying'

next_step "redirect_to_the_topics_list_after_creating_a_new_topic"

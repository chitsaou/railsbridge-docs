message <<-MARKDOWN
  我們會用 Rails 來做求職看板的網站，過程中會一直遇到錯誤，我們會慢慢修正（這種試錯法向來很有效）。

  Rails 的 generator（產生器）可以讓我們不必手刻檔案，雖然它比 scaffolding 帶來的魔法還少。（Scaffolding 是我們在 Intro to Rails 的 Suggestotron 專案裡面用來產生記錄文章所需要的一切程式的功能）。

  這表示，今天我們將只能完成比打造「Suggestotron」系統來得少的功能。但是我們將會一步一步的打造我們需要的功能，如此一來，你將會更明瞭這些功能是如何相互影響以及相互配合。
MARKDOWN

tip "這不會是一個你獨自操作的課程，每一頁裡面都有討論的段落，來確保大家的進度一致。" 

message <<-MARKDOWN
  # 看過來!

  你可能會注意到，我們已經假定了你可能已經參加過了 RailsBridge 的工作坊，或者早已經自行研究過 Rails app，且準備好要學更深了。

  我們這次也會跳過佈署到 Heroku 的步驟，但你仍然可以使用先前投票系統課程當中的步驟，自己把這個求職看板程式佈署到 Internet 上。
MARKDOWN

important "本課程是使用 Rails 4 的版本，如果你是使用 Rails 3 的版本，可能會做起來很奇怪或有問題，所以，如果你先前跳過了裝機趴（Installfest），而且還在使用 Rails 3 的版本的話，請先升級到 Rails 4。"

message <<-MARKDOWN
  # 給大家的小技巧:

  * 在寫程式的時候，同學們可以試試看一邊逐行讀程式碼，一邊講出這行程式碼在幹嘛。（例：「這字串會被存進 instance variable 裡面」或「這裡在定義名叫『snorgle』的 method」。常此以往，你就會很習慣 Rails 的用詞喔！）
  * 錯誤訊息都是好朋友！請仔細閱讀之，並確實瞭解 Rails 要告訴你的訊息。看到錯誤訊息就馬上鑽進去程式碼裡面檢查其實很正常，但請先停下來！認真閱讀錯誤訊息、想一想，要動手修正之前請先討論看看錯誤訊息的意義。
MARKDOWN

next_step "create_a_rails_app"
